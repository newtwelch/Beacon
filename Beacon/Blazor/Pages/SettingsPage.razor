@inject SettingsService settingsService

<div class="flex h-full w-full overflow-auto">
    @* <div class="border-r-2 col-span-5 border-sidepanel bg-container flex h-full flex-col space-y-3 overflow-hidden rounded-r-3xl p-10">
        <BeaconCheckBox Message="Enable Dark Mode" IsChecked="Settings.EnableDarkMode"
                        OnClick="DarkModeToggle"></BeaconCheckBox>
    </div> *@

    <!-- |===== LEFT SIDE ======| -->
    <div class="border-r-2 col-span-5 border-sidepanel bg-container flex h-full flex-col space-y-3 overflow-hidden rounded-r-3xl p-10">
        <p class="flex flex-col space-y-3">
            <button @onclick="() => activeCategory = SettingsCategory.General" class="tracking-widest text-xs beacon-text font-bold @(activeCategory == SettingsCategory.General ? "" : "opacity-50")">GENERAL</button>
            <button @onclick="() => activeCategory = SettingsCategory.SongLibrary" class="tracking-widest text-xs beacon-text font-bold @(activeCategory == SettingsCategory.SongLibrary ? "" : "opacity-50")">SONG LIBRARY</button>
            <button @onclick="() => activeCategory = SettingsCategory.BibleLibrary" class="tracking-widest text-xs beacon-text font-bold @(activeCategory == SettingsCategory.BibleLibrary ? "" : "opacity-50")">BIBLE LIBRARY</button>
            <button @onclick="() => activeCategory = SettingsCategory.History" class="tracking-widest text-xs beacon-text font-bold @(activeCategory == SettingsCategory.History ? "" : "opacity-50")">HISTORY</button>
        </p>
    </div>



    <!-- |===== GENERAL SETTINGS ======| -->
    <div class="@(activeCategory == SettingsCategory.General ? "p-10" : "hidden")">
        <BeaconCheckBox Message="Enable Dark Mode" IsChecked="settingsService.settings.EnableDarkMode"
                        OnClick="DarkModeToggle"></BeaconCheckBox>

        <div class="grid items-center md:grid-cols-2">
            <div>
                <label>Monitor to show Projection</label>
            </div>
            <div class="flex items-center gap-2 md:justify-end">
                @* <select id="monitorCount" value="@deviceName" @onchange="@((ChangeEventArgs e) => { settingsService.ChosenMonitor = e.Value.ToString(); })"
                        class="w-fit py-2 pr-14 pl-4 bg-gray_darkest border-0 focus:ring-0 text-white_normal">
                    @foreach (var monitor in monitorList)
                    {
                        <option value="@monitor.Item1">@monitor.Item2.Replace("\\\\.\\", "").Replace("DISPLAY", "DISPLAY ").Trim()</option>
                    }
                </select> *@
            </div>
        </div>
    
    </div>

    <!-- |===== SONG LIBRARY SETTINGS ======| -->
    <div class="@(activeCategory == SettingsCategory.SongLibrary ? "p-10 space-y-2" : "hidden")">
        <label class="text-accented font-bold tracking-widest">DOWNLOAD SONGS</label>
        <div class="flex space-x-2">
            <BeaconButton Message="NEWT DB"></BeaconButton>
            <BeaconButton Message="TAGALOG"></BeaconButton>
            <BeaconButton Message="ENGLISH"></BeaconButton>
        </div>
        
        <br/>
        <br/>

        <label class="text-accented font-bold tracking-widest">DATABASE SIZE</label>
        <div><span class="italic">Songs<span class="opacity-50">.db</span> &nbsp</span>.............. @((new System.IO.FileInfo(Constants.SongDbPath).Length / 1048576).ToString()) MB</div>
        <div class="flex space-x-2">
            <BeaconButton Message="TRIM"></BeaconButton>
            <BeaconButton Message="DELETE ALL" Hover="hover:bg-red hover:text-accented"></BeaconButton>
        </div>

        <br />
        <br />

        <label class="text-accented font-bold tracking-widest">LIBRARY</label>
        <BeaconCheckBox Message="Confirm before deleting a Song" IsChecked="settingsService.settings.AlwaysConfirmSongDeletion"
                        OnClick="ConfirmSongDeletionToggle"></BeaconCheckBox>
        <BeaconCheckBox Message="Show Lyric safe area margin when editing" IsChecked="settingsService.settings.ShowLyricMargin"
                        OnClick="ShowLyricMarginToggle"></BeaconCheckBox>
        <BeaconCheckBox Message="Enable 'Search Mode' (if disabled: use shortcuts)" IsChecked="settingsService.settings.EnableSearchModeUI"
                        OnClick="SearchModeUIToggle"></BeaconCheckBox>
    </div>



</div>

@code {
    [Parameter]
    public EventCallback ChangeState { get; set; }

    private SettingsCategory activeCategory;


    protected override async Task OnInitializedAsync()
    {
    }


    private async Task DarkModeToggle(){
        settingsService.settings.EnableDarkMode = !settingsService.settings.EnableDarkMode;
        await settingsService.Save();
        await ChangeState.InvokeAsync();
    }

    private async Task ConfirmSongDeletionToggle()
    {
        settingsService.settings.AlwaysConfirmSongDeletion = !settingsService.settings.AlwaysConfirmSongDeletion;
        await settingsService.Save();
        await ChangeState.InvokeAsync();
    }

    private async Task ShowLyricMarginToggle()
    {
        settingsService.settings.ShowLyricMargin = !settingsService.settings.ShowLyricMargin;
        await settingsService.Save();
        await ChangeState.InvokeAsync();
    }

    private async Task SearchModeUIToggle()
    {
        settingsService.settings.EnableSearchModeUI = !settingsService.settings.EnableSearchModeUI;
        await settingsService.Save();
        await ChangeState.InvokeAsync();
    }
}
