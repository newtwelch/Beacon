<button @onclick="async () => 
                    {
                        IsChecked = !IsChecked;
                        await OnClick.InvokeAsync();
                    }"
        class="border-2 space-x-3 text-xs flex items-center justify-center  rounded-[6px] border-l-text-accent/20 dark:border-d-text-accent/10
			@(IsChecked ? "bg-primary text-accented-on-primary" :
                            "hover:bg-primary hover:bg-opacity-50 hover:text-accented-on-primary h")
            @(CheckBoxVersion ? "size-5" : "px-5 h-10")">

    @if (!  IsChecked)
    {
        <span class="font-ark">
            @IconUnchecked
        </span>

        <span class="font-bold tracking-widest capitalize">
            @MessageUnchecked
        </span>
    }
    else
    {
        <span class="font-ark">
            @IconChecked
        </span>

        <span class="font-bold tracking-widest capitalize">
            @MessageChecked
        </span>
    }

</button>

@code {
    [Parameter]
    public bool IsChecked {get; set;}

    [Parameter]
    public bool CheckBoxVersion { get; set; }

    [Parameter]
    public EventCallback OnClick { get; set; }

    [Parameter]
    public string IconUnchecked { get; set; }

    [Parameter]
    public string IconChecked { get; set; }

    [Parameter]
    public string MessageUnchecked { get; set; }

    [Parameter]
    public string MessageChecked { get; set; }
}
